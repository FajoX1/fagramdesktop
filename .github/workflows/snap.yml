name: Snap.

on:
  workflow_dispatch:

jobs:

  snap:
    name: Ubuntu
    runs-on: ubuntu-latest

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Clone.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: First set up.
        run: |
          sudo iptables -P FORWARD ACCEPT
          sudo snap install --classic snapcraft
          sudo usermod -aG lxd $USER
          sudo lxd init --auto
          sudo lxd waitready

      - name: Free up some disk space.
        run: |
          sudo apt-get update
          sudo apt-get remove -y '^aspnetcore-.*' || echo "::warning::The command [sudo apt-get remove -y '^aspnetcore-.*'] failed to complete successfully. Proceeding..."
          sudo apt-get remove -y '^dotnet-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^dotnet-.*' --fix-missing] failed to complete successfully. Proceeding..."
          sudo apt-get remove -y '^llvm-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^llvm-.*' --fix-missing] failed to complete successfully. Proceeding..."
          sudo apt-get remove -y 'php.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y 'php.*' --fix-missing] failed to complete successfully. Proceeding..."
          sudo apt-get remove -y '^mongodb-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^mongodb-.*' --fix-missing] failed to complete successfully. Proceeding..."
          sudo apt-get remove -y '^mysql-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^mysql-.*' --fix-missing] failed to complete successfully. Proceeding..."

      - name: Clean previous builds.
        run: |
          sudo snapcraft clean

      - name: Telegram Desktop snap build.
        run: |
          sudo -u $USER snap run snapcraft --debug

      - name: Move artifact.
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          artifact_name=$(echo fagram_*.snap)
          echo "ARTIFACT_NAME=$artifact_name" >> $GITHUB_ENV

          mkdir artifact
          mv $artifact_name artifact

      - uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifact
